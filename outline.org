* TAS flow w/ Smart NIC
** Spoofed POSIX networking call redirects to server
** Server communicates with Smart NIC over PCI bus
** Smart NIC performs networking with device registers mapped in userspace
* Possible ways to port to a heterogenous x86 Host / ARMv8 SmartNIC machine
** TAS/Socket library stays on host, migrate server entirely to SmartNIC
   1. Migrate most of the fast path to the SmartNIC, and update it to make its user threads poll for RDMA
      interrupts.
      1. Or perhaps they can poll for more generic "events", like with the regular server. This could allow interrupts
	 to dispatch small threads to add requests to a queue and quietly exit. This could allow for less bottlenecking
	 over inter-machine communication.
   2. Keep multiple user threads running on each core on the host server, so we can still have high throughput for requests.
   3. Each host thread will write requests to the NIC using DMA, triggering an interrupt on the other end.
   4. On the SmartNIC, the DMA interrupt handler will atomically add requests to a blocking queue and exit.
   5. For each core on the SmartNIC, the thread will attempt to poll from the queue, and block accordingly if no request is
      present for it to parse.
* Questions for Dr. Peter and Jongyul
** What is the extent of the libraries that we can install? The DMA interface for DPDK doesn't seem very feature-rich.
** It seems that the DMA controller is disabled on the SmartNIC, would we be able to enable it using 
   =echo "1" > /sys/bus/pci/.../enable=? What is the state of drivers for the DMA controller?
** On the topic of the previous two questions, would RDMA-Core be a servicable means of using the DMA
   controller? It has been referenced in the Mellanox forums for usage with DPDK and DMA.
